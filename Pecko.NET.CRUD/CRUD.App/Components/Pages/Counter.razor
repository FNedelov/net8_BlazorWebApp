@using CRUD.Common.DTOs;
@using CRUD.App.Classes;
@using Microsoft.AspNetCore.Components.Authorization
@inject CustomAuthenticationStateProvider provider

@page "/counter"
@rendermode InteractiveServer
@attribute [Authorize(Roles = $"Admin")]

<AuthorizeView Roles="@($"{AppRoles.ADMIN}, {AppRoles.BATMAN}")">
    <Authorized>
        <span class="oi oi-cog" aria-hidden="true"></span> Admin functions
    </Authorized>
    <NotAuthorized>
        <span class="oi oi-cog" aria-hidden="true"></span> No elevated functions
    </NotAuthorized>
</AuthorizeView>


<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetClaimsPrincipalData();
        }
        catch (Exception ex)
        {
        }
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await provider
            .GetAuthenticationStateAsync();
        var user = authState.User;
    }
}
